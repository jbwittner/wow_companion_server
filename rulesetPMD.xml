<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Custom Rules" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
   <description>My custom rules</description>
   <exclude-pattern>.*/generated/.*</exclude-pattern>
   <!-- bestpractices -->
   <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod" />
   <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly" />
   <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace" />
   <rule ref="category/java/bestpractices.xml/AvoidReassigningLoopVariables">
      <properties>
         <property name="foreachReassign" value="deny" />
         <property name="forReassign" value="deny" />
      </properties>
   </rule>
   <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters" />
   <rule ref="category/java/bestpractices.xml/AvoidStringBufferField" />
   <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP">
      <properties>
         <property name="checkAddressTypes" value="IPv4 mapped IPv6|IPv6|IPv4" />
      </properties>
   </rule>
   <rule ref="category/java/bestpractices.xml/CheckResultSet" />
   <rule ref="category/java/bestpractices.xml/ConstantsInInterface">
      <properties>
         <property name="ignoreIfHasMethods" value="true" />
      </properties>
   </rule>
   <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt" />
   <rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach" />
   <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation">
      <properties>
         <property name="testClassPattern" value="Test" />
      </properties>
   </rule>
   <rule ref="category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage" />
   <rule ref="category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts">
      <properties>
         <property name="maximumAsserts" value="1" />
      </properties>
   </rule>
   <rule ref="category/java/bestpractices.xml/JUnitUseExpected" />
   <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray" />
   <rule ref="category/java/bestpractices.xml/MissingOverride" />
   <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine">
      <properties>
         <property name="strictMode" value="false" />
      </properties>
   </rule>
   <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />
   <rule ref="category/java/bestpractices.xml/SystemPrintln" />
   <rule ref="category/java/bestpractices.xml/UnusedFormalParameter">
      <properties>
         <property name="checkAll" value="true" />
      </properties>
   </rule>
   <rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
   <rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
   <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />
   <rule ref="category/java/bestpractices.xml/WhileLoopWithLiteralBoolean" />
   <!-- bestpractices -->
   <!-- Code Style -->
   <rule ref="category/java/codestyle.xml/AvoidDollarSigns" />
   <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
   <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending" />
   <rule ref="category/java/codestyle.xml/BooleanGetMethodName">
      <properties>
         <property name="checkParameterizedMethods" value="false" />
      </properties>
   </rule>
   <rule ref="category/java/codestyle.xml/CallSuperInConstructor" />
   <rule ref="category/java/codestyle.xml/ConfusingTernary">
      <properties>
         <property name="ignoreElseIf" value="true" />
      </properties>
   </rule>
   <rule ref="category/java/codestyle.xml/ControlStatementBraces">
      <properties>
         <property name="checkIfElseStmt" value="true" />
         <property name="checkSingleIfStmt" value="true" />
         <property name="checkWhileStmt" value="true" />
         <property name="checkForStmt" value="true" />
         <property name="checkDoWhileStmt" value="true" />
         <property name="checkCaseStmt" value="false" />
         <property name="allowEmptyLoop" value="false" />
      </properties>
   </rule>
   <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass">
      <properties>
         <property name="ignoreEnumDeclarations" value="false" />
         <property name="ignoreAnonymousClassDeclarations" value="false" />
         <property name="ignoreInterfaceDeclarations" value="false" />
      </properties>
   </rule>
   <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />
   <rule ref="category/java/codestyle.xml/GenericsNaming" />
   <rule ref="category/java/codestyle.xml/IdenticalCatchBranches" />
   <rule ref="category/java/codestyle.xml/LinguisticNaming">
      <properties>
         <property name="ignoredAnnotations" value="java.lang.Override" />
         <property name="checkBooleanMethod" value="true" />
         <property name="checkGetters" value="true" />
         <property name="checkSetters" value="true" />
         <property name="checkPrefixedTransformMethods" value="true" />
         <property name="checkTransformMethods" value="false" />
         <property name="booleanMethodPrefixes" value="is|has|can|have|will|should" />
         <property name="transformMethodNames" value="to|as" />
         <property name="checkFields" value="true" />
         <property name="checkVariables" value="true" />
         <property name="booleanFieldPrefixes" value="is|has|can|have|will|should" />
      </properties>
   </rule>
   <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal" />
   <rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal" />
   <rule ref="category/java/codestyle.xml/NoPackage" />
   <rule ref="category/java/codestyle.xml/OnlyOneReturn" />
   <rule ref="category/java/codestyle.xml/PackageCase" />
   <rule ref="category/java/codestyle.xml/UnnecessaryConstructor" />
   <rule ref="category/java/codestyle.xml/UnnecessaryReturn" />
   <rule ref="category/java/codestyle.xml/UseDiamondOperator" />
   <rule ref="category/java/codestyle.xml/UselessParentheses" />
   <rule ref="category/java/codestyle.xml/UseUnderscoresInNumericLiterals">
      <properties>
         <property name="acceptableDecimalLength" value="4" />
      </properties>
   </rule>
   <!-- Code Style -->
   <!-- Design -->
   <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" />
   <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts">
      <properties>
         <property name="problemDepth" value="3" />
      </properties>
   </rule>
   <rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />
   <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes" />
   <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
   <rule ref="category/java/design.xml/DoNotExtendJavaLangError" />
   <rule ref="category/java/design.xml/ExcessiveParameterList">
      <properties>
         <property name="minimum" value="20.0" />
      </properties>
   </rule>
   <rule ref="category/java/design.xml/LogicInversion" />
   <rule ref="category/java/design.xml/SimplifiedTernary" />
   <rule ref="category/java/design.xml/SwitchDensity">
      <properties>
         <property name="minimum" value="10.0" />
      </properties>
   </rule>
   <rule ref="category/java/design.xml/TooManyFields">
      <properties>
         <property name="maxfields" value="30" />
      </properties>
   </rule>
   <!-- Design -->
   <!-- Documentation -->
   <rule ref="category/java/documentation.xml/CommentSize">
      <properties>
         <property name="maxLines" value="15" />
      </properties>
   </rule>
   <rule ref="category/java/documentation.xml/UncommentedEmptyConstructor">
      <properties>
         <property name="ignoreExplicitConstructorInvocation" value="false" />
      </properties>
   </rule>
   <!-- Documentation -->
   <!-- Error Prone -->
   <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop">
      <properties>
         <property name="checkBreakLoopTypes" value="for|do|while" />
         <property name="checkContinueLoopTypes" value="for|do|while" />
         <property name="checkReturnLoopTypes" value="for|do|while" />
      </properties>
   </rule>
   <rule ref="category/java/errorprone.xml/AvoidCallingFinalize" />
   <rule ref="category/java/errorprone.xml/AvoidCatchingThrowable" />
   <rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier" />
   <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName" />
   <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause" />
   <rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition" />
   <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators" />
   <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues">
      <properties>
         <property name="strict" value="false" />
      </properties>
   </rule>
   <rule ref="category/java/errorprone.xml/CallSuperFirst" />
   <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals" />
   <rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly" />
   <rule ref="category/java/errorprone.xml/DoNotHardCodeSDCard" />
   <rule ref="category/java/errorprone.xml/EmptyCatchBlock">
      <properties>
         <property name="allowCommentedBlocks" value="false" />
         <property name="allowExceptionNameRegex" value="^(ignored|expected)$" />
      </properties>
   </rule>
   <rule ref="category/java/errorprone.xml/EmptyIfStmt" />
   <rule ref="category/java/errorprone.xml/EmptySwitchStatements" />
   <rule ref="category/java/errorprone.xml/EmptySynchronizedBlock" />
   <rule ref="category/java/errorprone.xml/EmptyWhileStmt" />
   <rule ref="category/java/errorprone.xml/EqualsNull" />
   <rule ref="category/java/errorprone.xml/InstantiationToGetClass" />
   <rule ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass" />
   <rule ref="category/java/errorprone.xml/NullAssignment" />
   <rule ref="category/java/errorprone.xml/SingleMethodSingleton" />
   <rule ref="category/java/errorprone.xml/SingletonClassReturningNewInstance" />
   <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings" />
   <rule ref="category/java/errorprone.xml/UselessOperationOnImmutable" />
   <!-- Error Prone -->
   <!-- Performance -->
   <rule ref="category/java/performance.xml/AddEmptyString" />
   <rule ref="category/java/performance.xml/AppendCharacterWithChar" />
   <rule ref="category/java/performance.xml/AvoidArrayLoops" />
   <rule ref="category/java/performance.xml/AvoidFileStream" />
   <rule ref="category/java/performance.xml/BigIntegerInstantiation" />
   <rule ref="category/java/performance.xml/OptimizableToArrayCall" />
   <rule ref="category/java/performance.xml/InefficientStringBuffering" />
   <rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration" />
   <rule ref="category/java/performance.xml/StringInstantiation" />
   <rule ref="category/java/performance.xml/StringToString" />
   <rule ref="category/java/performance.xml/UseArraysAsList" />
   <rule ref="category/java/performance.xml/UselessStringValueOf" />
   <!-- Performance -->
</ruleset>
